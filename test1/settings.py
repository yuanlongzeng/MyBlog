"""
Django settings for test1 project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os,sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0,os.path.join(BASE_DIR,"extra_apps"))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd3xah3%b($tv!bfa%2d(k5a#0$4t%73gwy_m&9vvmeq6)^p)^1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # 可以连接到此网站的IP
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_URL = '/static/'  # 网址访问时网址下一目录的名字  可以随便定义与
STATIC_ROOT = os.path.join(BASE_DIR,'static')  #  collrunectstatics的文件所在位置，也是静态文件的实际位置
#非debug模式下这一句会找不到静态文件
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
# )
#AUTH_USER_MODEL = "login.UserProfile"
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'haystack',
    'captcha',  # 添加的app会自己生成所需要的数据  所以就需要migrate一下
    'blog',
    'for404',
    'DjangoUeditor',
    "ckeditor",
    "ckeditor_uploader", #富文本编辑中的图片上传功能
    "xadmin",
    "crispy_forms",
    "login",

    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
HAYSTACK_CONNECTIONS = {
    'default':{
        "ENGINE":'blog.whoosh_cn_backends.WhooshEngine',
        "PATH":os.path.join(BASE_DIR,'whoosh_index') # 索引文件需要存放的位置
    },
    }
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor' # 每当有文章更新时就更新索引

ROOT_URLCONF = 'test1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}



# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True



#
# # ckeditor config
# CKEDITOR_UPLOAD_PATH = 'article_files/'
# CKEDITOR_JQUERY_URL ='js/jquery-3.2.1.min.js'
# CKEDITOR_IMAGE_BACKEND = 'pillow'
# CKEDITOR_CONFIGS = {
#     'default': {
#         'language': 'zh-cn',
#         'toolbar_YourCustomToolbarConfig': [
#
#             {'name': 'clipboard', 'items': ['Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord']},
#             {'name': 'paragraph', 'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote']},
#             {'name': 'insert', 'items': ['Image', 'Table', 'HorizontalRule', 'Smiley']},
#             {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
#             {'name': 'editing', 'items': ['Find', 'Replace', '-']},
#             {'name': 'tools', 'items': ['Maximize']},
#             '/',
#             {'name': 'styles', 'items': ['Format', 'Font', 'FontSize']},
#             {'name': 'basicstyles',
#              'items': ['Bold', 'Italic', 'Underline', 'Strike', '-', 'RemoveFormat']},
#             {'name': 'colors', 'items': ['TextColor', 'BGColor']},
#             {'name': 'paragraph',
#              'items': ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']},
#             {'name': 'document', 'items': ['Source']},
#         ],
#         'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
#         'width': '100%',
#         'tabSpaces': 4,
#         'extraPlugins': ','.join([
#             'uploadimage',  # the upload image feature
#             # your extra plugins here
#             'div',
#             'autolink',
#             'autoembed',
#             'embedsemantic',
#             'autogrow',
#             'widget',
#             'lineutils',
#             'clipboard',
#             'dialog',
#             'dialogui',
#             'elementspath'
#         ]),
#     }
# }


#media
MEDIA_URL ="/media/" #上传文件存储路径
MEDIA_ROOT = os.path.join(BASE_DIR,"media")
#配置ckeditor
CKEDITOR_UPLOAD_PATH="upload/"


CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_BROWSE_SHOW_DIRS = True